11. Search Range in Binary Search Tree 二叉查找树中搜索区间

Given a binary search tree and a range [k1, k2], return node values within a given range in ascending order.
给定一个二叉查找树和范围[k1, k2]。按照升序返回给定范围内的节点值。

样例
Example 1:

Input：{5},6,10
Output：[]
        5
it will be serialized {5}
No number between 6 and 10
Example 2:

Input：{20,8,22,4,12},10,22
Output：[12,20,22]
Explanation：
        20
       /  \
      8   22
     / \
    4   12
it will be serialized {20,8,22,4,12}
[12,20,22] between 10 and 22

解题思路：中序遍历
/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */

public class Solution {
    /**
     * @param root: param root: The root of the binary search tree
     * @param k1: An integer
     * @param k2: An integer
     * @return: return: Return all keys that k1<=key<=k2 in ascending order
     */
     
    List<Integer> answer = new ArrayList<>();
    public List<Integer> searchRange(TreeNode root, int k1, int k2) {
        // write your code here
        searchHelper(root, k1, k2);
        return answer;
    }
    
    private void searchHelper(TreeNode root, int k1, int k2) {
        if (root == null) return;
        // 中序遍历
        if (root.val > k1) {
            searchHelper(root.left, k1, k2);
        }
        
        if (root.val >= k1 && root.val <= k2) {
            answer.add(root.val);
        }
        
        if (root.val < k2) {
            searchHelper(root.right, k1, k2);
        }
        
    }
}
